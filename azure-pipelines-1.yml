# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage : GenerateArtefact
  jobs:
    - job: Artefact
      steps:
      - task: CopyFiles@2
        inputs:
          SourceFolder: 'armtemplate/'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
        
      
- stage : InfrastructureDeployment
  pool:
   vmImage: 'ubuntu-latest' 
  jobs: 
  - job: Infrasturcture
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Build.ArtifactStagingDirectory)'   

    - task: AzureResourceManagerTemplateDeployment@3
      inputs:      
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Free Trial(85e6bef8-2ce5-4936-b26a-102ce2668487)'
        subscriptionId: '85e6bef8-2ce5-4936-b26a-102ce2668487'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'madhur-rg'
        location: 'Central US'
        templateLocation: 'Linked artifact'
        csmFile: '/home/vsts/work/1/a/ACRAKS.json'
        csmParametersFile: '/home/vsts/work/1/a/ACRAKSParamter.json'
        deploymentMode: 'Incremental'
        deploymentName: 'acrDeployement'
        deploymentOutputs: 'acrName'
            
    - task: PowerShell@2
      inputs:
            targetType: 'inline'
            script: |
              # Write your PowerShell commands here.
              
              Write-Host "$(acrName)"
    
    - task: AzurePowerShell@5
      name: AzurePowershell
      inputs:
        azureSubscription: 'Free Trial(85e6bef8-2ce5-4936-b26a-102ce2668487)'
        ScriptType: 'InlineScript'
        Inline: |
        
          # $json = (Get-Content "/home/vsts/work/1/a/ACRAKS.json" -Raw) | ConvertFrom-Json
          # Write-Host "JSON:($json)"
          $json = ConvertFrom-Json '$(acrName)'
          Write-Host "JSON:($json)"
          
          $AKS = $json.parameters.clusterName | select value
          $ACR = $json.parameters.acrName | select value
          
          Write-Host "Hello World"
          Write-Host "Using Department:$(ACR)"
          Write-Host "$(AKS)"
          Write-Host "$(ACR)"

          echo "##vso[task.setvariable variable=ACRName;isOutput=true]$($ACR.name)"
          echo "##vso[task.setvariable variable=AKSName;isOutput=true]$($AKS.name)"
          
          $ACRCred = Get-AzContainerRegistryCredential -ResourceGroupName "madhur-rg" -Name $($ACR)
          
          echo "##vso[task.setvariable variable=UserName;isOutput=true]$($ACRCred.Username)"
          echo "##vso[task.setvariable variable=Password;isOutput=true]$($ACRCred.Password)"
        azurePowerShellVersion: 'LatestVersion'
    

 
# - stage : CodeDeployment
#   dependsOn: InfrastructureDeployment 
#   pool:
#    vmImage: 'ubuntu-latest' 
#   jobs:
#     - job: CodeDeployment
    

              
              
    

